
@page "/"
@using DomainModel.Models;
@using ParkingManagementBlazorServer.Services;
@inject ParkingService _parkingService; 
@inject NavigationManager _navigationManager;
@inject CustomAuthenticationStateProvider _customAuthenticationStateProvider;

@code {
    private List<Parking> Parkings { get; set; }
    public ConfirmationDialog SelectConfirmationDialog { get; set; }
    public int SelectedParkingId { get; set; }
    protected override async Task OnInitializedAsync()
    {
        Parkings = await _parkingService.GetParkings();
        await _customAuthenticationStateProvider.DeleteExpiredTokenFromLocalStorage();
    }
    private void OpenAddParkingPage()
    {
        _navigationManager.NavigateTo("/AddParking");
    }

    private async Task SelectingParking(int parkingId, int ownerId)
    {
        int userId = await _customAuthenticationStateProvider.GetUserId();
        SelectedParkingId = parkingId;
        if (userId != ownerId)
        {
            SelectConfirmationDialog.Show();
        }
    }

    private async Task OnSelectConfirmationSelected(bool isDeleteConfirmed)
    {
        if (isDeleteConfirmed)
        {
            await _parkingService.SelectingParkingAsync(SelectedParkingId);
            Parkings = await _parkingService.GetParkings();
        }
    }
}

<ConfirmationDialog @ref="SelectConfirmationDialog" ConfirmationChanged="@OnSelectConfirmationSelected"></ConfirmationDialog>

@if(Parkings == null)
{
    <div>Loading...</div>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th scope="col">City</th>
                <th scope="col">Neighborhood</th>
                <th scope="col">From</th>
                <th scope="col">To</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var parking in Parkings)
            {
                if (parking.ParkingFrom > DateTime.Now && parking.UserId == null)
                {
                    <tr>
                        <td>@parking.City</td>
                        <td>@parking.Neighborhood</td>
                        <td>@parking.ParkingFrom.ToString("dd.MM.yyyy")</td>
                        <td>@parking.ParkingTo.ToString("dd.MM.yyyy")</td>
                        <AuthorizeView>
                            <td>
                                <button type="button" class="btn btn-primary btn-sm" @onclick="() => SelectingParking(parking.Id, parking.OwnerId)">Select</button>
                            </td>
                        </AuthorizeView>
                    </tr>
                }
            }
        </tbody>
    </table>
}
<br />
<AuthorizeView>
<button type="button" class="btn btn-success" @onclick="OpenAddParkingPage">
    <span class="oi oi-plus"></span>
    Add Parking
</button>
</AuthorizeView>


